package utils

import (
	"GiftBuyer/internal/model"
	"fmt"
	"strconv"
)

// FormatAutoBuySettings —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
func FormatAutoBuySettings(settings *model.UserSettings) string {
	// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏
	status := "üî¥ –í—ã–∫–ª—é—á–µ–Ω–æ"
	if settings.AutoBuyEnabled {
		status = "üü¢ –í–∫–ª—é—á–µ–Ω–æ"
	}

	// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ª–∏–º–∏—Ç —Ü–µ–Ω—ã
	from := "0"
	to := "‚àû"
	if settings.PriceLimitFrom != nil {
		from = strconv.Itoa(*settings.PriceLimitFrom)
	}
	if settings.PriceLimitTo != nil {
		to = strconv.Itoa(*settings.PriceLimitTo)
	}

	// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ª–∏–º–∏—Ç —Å–∞–ø–ª–∞—è
	supply := "–ù–µ –∑–∞–¥–∞–Ω"
	if settings.SupplyLimit != nil && *settings.SupplyLimit > 0 {
		supply = strconv.Itoa(*settings.SupplyLimit)
	}

	// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–ª-–≤–æ —Ü–∏–∫–ª–æ–≤ –ø–æ–∫—É–ø–∫–∏
	autoBuyCycles := "–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ"
	if settings.AutoBuyCycles > 0 {
		autoBuyCycles = strconv.Itoa(settings.AutoBuyCycles)
	}

	return fmt.Sprintf(
		"<b>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏</b>\n"+
			"<b>–°—Ç–∞—Ç—É—Å:</b> %s\n\n"+
			"<b>–õ–∏–º–∏—Ç —Ü–µ–Ω—ã:</b>\n"+
			"–û—Ç %s –¥–æ %s ‚≠êÔ∏è\n\n"+
			"<b>–õ–∏–º–∏—Ç —Å–∞–ø–ª–∞—è:</b>\n"+
			"%s\n\n"+
			"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏–∫–ª–æ–≤:</b>\n"+
			"%s",
		status,
		from,
		to,
		supply,
		autoBuyCycles,
	)
}
